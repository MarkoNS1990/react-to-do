{"version":3,"sources":["TodoItem.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","setTasks","t","tasks","type","onClick","map","item","id","completed","handleChangeCompleted","className","name","filter","handleDeleteTask","class","Todo","useState","task","setTask","placeholder","onChange","e","target","value","Math","random","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA2BeA,EAzBE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,EAAEC,EAAS,EAATA,MAgB1B,OACI,+BACQ,uBAAOC,KAAK,WAAWC,QAAS,kBAZd,SAACH,GAE3BD,EAASE,EAAMG,KAAI,SAACC,GAChB,OAAGA,EAAKC,KAAON,EAAEM,GAEN,2BAAID,GAAX,IAAgBE,WAAWF,EAAKE,YAE7BF,MAKiCG,CAAsBR,MAC1D,sBAAMS,UAAWT,EAAEO,UAAU,MAAM,OAAnC,SAA4CP,EAAEU,OAC9C,yBAAQP,QAAS,YAlBJ,SAACH,GACtBD,EAASE,EAAMU,QAAO,SAAAN,GAAI,OAAEA,EAAKC,KAAKN,EAAEM,OAiBVM,CAAiBZ,IAAvC,UAA6C,mBAAGa,MAAM,qBAAtD,SAHCb,EAAEM,KCmBJQ,EAnCF,WACT,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOd,EAAP,KAAaF,EAAb,KAcA,OACI,sBAAKU,UAAU,WAAf,UACI,uBAAOP,KAAK,OAAOgB,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAKH,EAAQG,EAAEC,OAAOC,QAAQA,MAAON,IACzF,wBAAQb,QAhBW,WAEvBJ,EAAS,GAAD,mBAAKE,GAAL,CAAW,CAACS,KAAKM,EAAKT,WAAU,EAAMD,GAAiB,IAAdiB,KAAKC,aACtDP,EAAQ,IACZQ,QAAQC,IAAIV,IAYJ,sBACA,6BAAKf,EAAMG,KAAI,SAACJ,GAAD,OACX,cAAC,EAAD,CAAUD,SAAUA,EAAUC,EAAGA,EAAGC,MAAOA,a,MCb5C0B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0977d03f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TodoItem = ({setTasks,t,tasks})=>{\r\n\r\n    const handleDeleteTask = (t)=>{\r\n        setTasks(tasks.filter(item=>item.id!==t.id))\r\n    }\r\n\r\n    const handleChangeCompleted = (t)=>{\r\n        \r\n        setTasks(tasks.map((item)=>{\r\n            if(item.id === t.id){\r\n\r\n                return {...item,completed:!item.completed}\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n    return(\r\n        <li key={t.id}>\r\n                <input type=\"checkbox\" onClick={()=>handleChangeCompleted(t)}/>\r\n                <span className={t.completed?'red':'blue'}>{t.name}</span>\r\n                <button onClick={()=>{handleDeleteTask(t)}} ><i class=\"fas fa-trash-alt\"></i> </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React,{useState} from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst Todo = ()=>{\r\n    const [task,setTask] = useState('')\r\n    const [tasks,setTasks]= useState([])\r\n    const handleAddTaskClick = ()=>{\r\n        \r\n        setTasks([...tasks,{name:task,completed:false,id:Math.random()*1000}])\r\n        setTask('')\r\n    console.log(task);\r\n        \r\n    }\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"main-div\">\r\n            <input type=\"text\" placeholder='Add todo' onChange={(e)=>setTask(e.target.value)} value={task}/>\r\n            <button onClick = {handleAddTaskClick}>Add task</button>\r\n            <ul>{tasks.map((t)=>\r\n                <TodoItem setTasks={setTasks} t={t} tasks={tasks} />\r\n                \r\n            )}</ul>\r\n        </div>\r\n        \r\n        \r\n        \r\n        )\r\n    \r\n            \r\n        \r\n    \r\n}\r\n\r\nexport default Todo","import Todo from './Todo'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}