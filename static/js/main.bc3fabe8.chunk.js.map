{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","task","setTask","tasks","setTasks","className","type","placeholder","onChange","e","target","value","onClick","name","completed","id","Math","random","console","log","map","t","item","handleChangeCompleted","filter","handleDeleteTask","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAqDeA,EAlDF,WACT,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAyBA,OACI,sBAAKC,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAKP,EAAQO,EAAEC,OAAOC,QAAQA,MAAOV,IACzF,wBAAQW,QA3BW,WAEvBR,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACU,KAAKZ,EAAKa,WAAU,EAAMC,GAAiB,IAAdC,KAAKC,aACtDf,EAAQ,IACZgB,QAAQC,IAAIlB,IAuBJ,sBACA,6BAAKE,EAAMiB,KAAI,SAACC,GAAD,OACX,+BAEA,uBAAOf,KAAK,WAAWM,QAAS,kBAxBd,SAACS,GAE3BjB,EAASD,EAAMiB,KAAI,SAACE,GAChB,OAAGA,EAAKP,KAAOM,EAAEN,GAEN,2BAAIO,GAAX,IAAgBR,WAAWQ,EAAKR,YAE7BQ,MAiBiCC,CAAsBF,MAC1D,sBAAMhB,UAAWgB,EAAEP,UAAU,MAAM,OAAnC,SAA4CO,EAAER,OAC9C,yBAAQD,QAAS,YAfJ,SAACS,GACtBjB,EAASD,EAAMqB,QAAO,SAAAF,GAAI,OAAEA,EAAKP,KAAKM,EAAEN,OAcVU,CAAiBJ,IAAvC,UAA6C,mBAAGK,MAAM,qBAAtD,SAJSL,EAAEN,a,MCxBZY,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc3fabe8.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\nconst Todo = ()=>{\r\n    const [task,setTask] = useState('')\r\n    const [tasks,setTasks]= useState([])\r\n    const handleAddTaskClick = ()=>{\r\n        \r\n        setTasks([...tasks,{name:task,completed:false,id:Math.random()*1000}])\r\n        setTask('')\r\n    console.log(task);\r\n        \r\n    }\r\n    const handleChangeCompleted = (t)=>{\r\n        \r\n        setTasks(tasks.map((item)=>{\r\n            if(item.id === t.id){\r\n\r\n                return {...item,completed:!item.completed}\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    const handleDeleteTask = (t)=>{\r\n        setTasks(tasks.filter(item=>item.id!==t.id))\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"main-div\">\r\n            <input type=\"text\" placeholder='Add todo' onChange={(e)=>setTask(e.target.value)} value={task}/>\r\n            <button onClick = {handleAddTaskClick}>Add task</button>\r\n            <ul>{tasks.map((t)=>\r\n                <li key={t.id}>\r\n                \r\n                <input type=\"checkbox\" onClick={()=>handleChangeCompleted(t)}/>\r\n                <span className={t.completed?'red':'blue'}>{t.name}</span>\r\n                <button onClick={()=>{handleDeleteTask(t)}} ><i class=\"fas fa-trash-alt\"></i> </button>\r\n                </li>\r\n            )}</ul>\r\n        </div>\r\n        \r\n        \r\n        \r\n        )\r\n    \r\n            \r\n        \r\n    \r\n}\r\n\r\nexport default Todo","import Todo from './Todo'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}